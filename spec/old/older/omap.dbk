<?xml version="1.0"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook V4.2//EN"
         "file:///usr/local/share/xml/docbook/4.2/docbookx.dtd"
[]>

<article status="draft">
  <articleinfo>
    <title>
      Ordered Mapping Language-Independent Type for <trademark>YAML</trademark>
    </title>

    <subtitle>
      Working Draft 200?-??-??
    </subtitle>

    <authorgroup>
      <author>
        <firstname>Oren</firstname>
        <surname>Ben-Kiki</surname>
        <email>oren@ben-kiki.org</email>
      </author>

      <author>
        <firstname>Clark</firstname>
        <surname>Evans</surname>
        <email>cce+yaml@clarkevans.com</email>
      </author>

      <author>
        <firstname>Brian</firstname>
        <surname>Ingerson</surname>
        <email>ingy@ttul.org</email>
      </author>
    </authorgroup>

    <copyright>
      <year>2001-2004</year>
      <holder>Oren Ben-Kiki</holder>
      <holder>Clark Evans</holder>
      <holder>Brian Ingerson</holder>
    </copyright>

    <legalnotice>
      This document may be freely copied provided it is not modified.
    </legalnotice>

    <abstract>
      <title>Status</title>

      <para>
        This specification is a release candidate and reflects consensus
        reached by members of the yaml-core mailing list. Any questions
        regarding this draft should be raised on this list at <ulink
        url="http://lists.sourceforge.net/lists/listinfo/yaml-core"/>. With
        this release of the YAML specification, all further changes will be
        strictly limited to clarifications, or fixing bugs in productions. At
        this point, further enhancement or correction of logical flaws will be
        put off to the next version (1.1) of the YAML specification.
      </para>
    </abstract>
  </articleinfo>

  <part>
    <variablelist>
      <varlistentry>
        <term>URI:</term>
        <listitem><userinput>tag:yaml.org,2002:omap</userinput></listitem>
      </varlistentry>

      <varlistentry>
        <term>Shorthand:</term>
        <listitem><userinput>!omap</userinput></listitem>
      </varlistentry>

      <varlistentry>
        <term>Kind:</term>
        <listitem>Sequence.</listitem>
      </varlistentry>

      <varlistentry>
        <term>Definition:</term>
        <listitem>
          <para>
            Ordered sequence of key:value pairs without duplicates.
          </para>

          <para>
            A common type used for modeling is the ordered list of named
            values, where duplicates are not allowed. For example, this is the
            basic collection data type used by the PHP language.
          </para>

          <para>
            Most programming languages do not have a built-in native data type
            for supporting ordered maps. Such data types are usually provided
            by libraries. If no such data type is available, an application may
            resort to loading an <quote><userinput>!omap</userinput></quote>
            into a native array of hash tables containing one key each.
          </para>

          <para>
            The <quote><userinput>!omap</userinput></quote> tag may be given
            explicitly, or the application may choose to implicitly type a
            sequence of single-key mappings to ordered maps. In this case, an
            explicit <quote><userinput>!seq</userinput></quote> transfer must
            be given to sequences of single-key mappings that do not represent
            ordered maps.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <example>
<screen>
# Explicitly typed ordered map (dictionary).
Bestiary: !omap
  - aardvark: African pig-like ant eater. Ugly.
  - anteater: South-American ant eater. Two species.
  - anaconda: South-American constrictor snake. Scary.
  # Etc.
# Flow style
Numbers: !omap [ one: 1, two: 2, three : 3 ]
</screen>
    </example>
  </part>
</article>
